---
- hosts: all
  become_method: sudo
  gather_facts: false
  tasks:
  - name: check python installation
    import_tasks: './eaas/ansible/tasks/python.yaml'

- hosts: all
  become_method: sudo
  gather_facts: true
  vars_files:
  - ./config/defaults.yaml
  vars:
    task_import_prefix: './eaas/ansible/tasks'
    eaas_clustermgr_config_template: './templates/clustermgr-config.yaml.j2'
    eaas_clustermgr:
      node_cores: "{{ eaas.num_sessions | default(ansible_processor_vcpus) }}"
      node_memory: "{{ ansible_memtotal_mb }}"
  pre_tasks:
  - name: check supported distribution
    when: "ansible_distribution not in ['Ubuntu', 'CentOS', 'RedHat', 'Debian']"
    set_fact: 
      unsupported_os: "true"

  - name: full distribution support
    when: "unsupported_os is undefined"
    debug:
      msg: "{{ ansible_distribution }} distribution is currently not supported!"
  
  - name: stop eaas-server
    when: "unsupported_os is undefined"
    import_tasks: "{{ task_import_prefix }}/eaas-service.yaml"
    vars:
      state: stopped

  roles:
  - eaas-common
  - eaas-docker
  - eaas-server
  - welcome-content
  
  post_tasks:
  - name: install eaasi-ui
    when: eaasi_ui is defined
    include_role:
      name: eaasi-ui
      public: yes
  - name: restart eaas-server
    when: "unsupported_os is undefined"
    import_tasks: "{{ task_import_prefix }}/eaas-service.yaml"
    vars:
      state: restarted
  - name: wait for eaas-server to start up
    register: response
    until: response.status != 404
    retries: 180  # 180*5s == 15 min
    delay: 5
    uri:
      method: "POST"
      url: "{{ eaas_base_url }}/emil/environment-repository/actions/prepare"
      return_content: yes
      timeout: 600  # 10*60s
